>>> COURSE >>>

Process Oriented Programming (1DT083) Spring 2011


>>> GROUP >>>

6

>>> PROJECT NAME >>>

SEWS - Simple Erlang WebServer


>>> PROJECT DESCRIPTION >>>

SEWS is your average everyday uniqe webserver written in the language of Erlang.
SEWS multiplatform functionality provides the end-user with a "do all" solution!
No extra software needed, all is included in the SEWS software provided.


>>> GROUP MEMBERS >>>

900206-3858 Jonathan.Boellke.2965@student.uu.se
890523-1497 Alexander.Fougner.5019@student.uu.se
881210-6915 Dennis.Rosen.8141@student.uu.se
900418-5113 Per.Wiberg.6781@student.uu.se
870225-7950 johannes.henriksson.7425@student.uu.se
870424-1416 daniel.flodin.1241@student.uu.se


>>> MAY THE SOURCE BE WITH YOU >>>

clone the repository

	git clone https://github.com/sews/SEWS--Zeus-.git
	

if your repository is out of sync, then do

	git pull

from the shell


>>> DIRECTORY CONTENTS >>>

.
├── doc
│   ├── bench
│   │   ├── apache-c100.plot
│   │   ├── apache-c10.plot
│   │   ├── apache-n1000000-c10
│   │   ├── apache-n1000000-c100
│   │   ├── apache-n100000-c10
│   │   ├── apache-n100000-c100
│   │   ├── sews-c100.plot
│   │   ├── sews-c10.plot
│   │   ├── sews-n1000000-c10
│   │   ├── sews-n1000000-c100
│   │   ├── sews-n100000-c10
│   │   └── sews-n100000-c100
│   ├── final_presentation.pdf
│   ├── final_report.pdf
│   └── html
│       └── overview.edoc
├── ebin
├── Emakefile
├── include
│   ├── config.hrl
│   ├── test.erl
│   ├── testmall.erl
│   └── upload.html
├── Makefile
├── README
├── SEWSMakefile
└── src
    ├── cache.erl
    ├── cache_kf.erl
    ├── dynerl.erl
    ├── error_mod.erl
    ├── fm.erl
    ├── gen_html.erl
    ├── get.erl
    ├── main.erl
    ├── parser.erl
    ├── post.erl
    ├── presentation.erl
    └── sews.app

>>> ERLANG VERSION >>>

This code has been developed and tested using Erlang versions:
	- R13B03
	- R14B

>>> MAKE IT HAPPEN >>>

Using the make utility you can perform the following actions:

make         ==> Compiles the Erlang source files if necessary (also runs EUnit) 
make archive ==> Creates a gziped tar archive of this directory. 
make clean   ==> Removes all beam files and html files generated by Edoc.
make doc     ==> Generates Edoc documentation in the doc/html directory.
make start   ==> Starts the system. (The method below is preferred, this method might cause problems with the ETS tables)
make test    ==> Runs all EUnit tests.


>>> TO COMPILE >>>

To compile the project, simply type make.

>>> TO RUN AND TEST THE SYSTEM >>>

After compiling type

	erl -pa ebin

to start erlang and then type
	
	main:start().

This will start SEWS using the port as defined in the include/config.hrl file.

For more information on how to change default socket and more see FinalPresentation.pdf
